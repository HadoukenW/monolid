---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
const isVtorichkaUrl = href === '/vtorichka/'
---

<li class="header__li" itemprop="name" class:list={[className]}>
	{
		isVtorichkaUrl && (
			<span class="vtorichka__badge">В продаже</span>
		)
	}
	<a itemprop="url" href={href} class:list={[className, { active: isActive, }]} {...props}>	
		<slot />
	</a>
</li>
<style lang="scss">
	a {
		display: inline-block;
		text-decoration: none;
		transition: .3s ease color;
		
		&:hover {
			position: relative;
			&::after {
				content: '';
				position: absolute;
				width: 100%;
				bottom: -5px;
				height: 3px;
				border-bottom: 2px solid var(--btn-primary);
				left: 0;
			}
		}

		&.active {
			position: relative;

			&::after {
				content: '';
				position: absolute;
				width: 100%;
				bottom: -5px;
				height: 3px;
				border-bottom: 2px solid var(--btn-primary);
				left: 0;
			}
		}
	}

	.header__li {
		position: relative;
<<<<<<< HEAD
		max-width: fit-content;
=======
		width: max-content;
>>>>>>> 864ba681f7b1cbc731ada08857afe8e44c00c624
		.vtorichka__badge {
			position: absolute;
			pointer-events: none;
			top: -25px;
			width: 100%;
			text-align: center;
			left: 0;
			background-color: red;
			padding: 2px;
			color: var(--primary);
			font-weight: 500;
<<<<<<< HEAD
			font-size: 14px;

			@media(max-width: 992px) {
				position: static;
				display: flex;
				justify-content: center;
=======


			@media(max-width: 992px) {
				position: static;
				display: block;
>>>>>>> 864ba681f7b1cbc731ada08857afe8e44c00c624
			}
		}
	}
</style>



