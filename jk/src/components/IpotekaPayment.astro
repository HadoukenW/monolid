---
 const {title} = Astro.props
---

<section aria-labelledby="ipoteka__title">
    <div class="container">
        <h2 id="ipoteka__title">Купить в ипотеку</h2>

        <ul>
            <li>Ставка от 4,6 % до 30 лет</li>
            <li>Подберем ипотеку на выгодных условиях</li>
        </ul>

        <p class="preform__title">Получите расчет ежемесячного платежа по ипотеке</p>

        <form class="ipoteka__form" data-sd={title}>
            <label>Количество комнат
                <select id="ipotekaFormSelect">
                    <option value="1 комната">1 комната</option>
                    <option value="2 комнаты">2 комнаты</option>
                    <option value="3 комнаты">3 комнаты</option>
                    <option value="4 комнаты+">4 комнаты+</option>
                  </select>
            </label>
            <label >Первоначальный взнос
                <input id="ipotekaFormPayment" min="0" type="number" placeholder="100000" required/>
            </label>
            <label >Срок, лет
                <input id="ipotekaFormPeriod" min="0" max="30" type="text" placeholder="0 лет" required/>
            </label>
            <label >Имя
                <input id="ipotekaFormName" name="name"  type="text" placeholder="Ваше имя" required/>
            </label>
            <label >Телефон
                <input id="ipotekaFormPhone" name="phone" class="phoneMask" type="tel" placeholder="Ваш телефон" required/>
            </label>
            <button>Рассчитать ипотеку</button>
            <div class="form-sent-message ipotekaMessage">
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" width="52" height="52" x="0" y="0" viewBox="0 0 24 24" style="enable-background:new 0 0 512 512" xml:space="preserve"><g><switch><g><g fill="#02bc7d"><path d="M9.7 11.3c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4l3 3c.2.2.4.3.7.3s.5-.1.7-.3l7-8c.3-.5.3-1.1-.2-1.4-.4-.3-1-.3-1.3.1L12 13.5z" fill="#02bc7d" opacity="1" data-original="#02bc7d"></path><path d="M21 11c-.6 0-1 .4-1 1 0 4.4-3.6 8-8 8s-8-3.6-8-8c0-2.1.8-4.1 2.3-5.6C7.8 4.8 9.8 4 12 4c.6 0 1.3.1 1.9.2.5.2 1.1-.1 1.3-.7s-.2-1-.7-1.2h-.1c-.8-.2-1.6-.3-2.4-.3C6.5 2 2 6.5 2 12.1c0 2.6 1.1 5.2 2.9 7 1.9 1.9 4.4 2.9 7 2.9 5.5 0 10-4.5 10-10 .1-.6-.4-1-.9-1z" fill="#02bc7d" opacity="1" data-original="#02bc7d"></path></g></g></switch></g></svg>										
                <p>Форма успешно отправлена</p>
            </div>
        </form>
        <p class="personalData">«Нажимая на кнопку, вы даете согласие на обработку персональных данных и соглашаетесь c политикой конфиденциальности»</p>
    </div>
</section>

<style lang="scss">
    section {
        padding: var(--section-padding) 0;
        background-color: var(--primary);
        color: var(--primary);
        ul {
            display: flex;
            flex-direction: column;
            gap: 15px;
            
            li {
                position: relative;
                display: flex;
                gap: 10px;
                font-size: 16px;
                color: var(--headers-primary);
                &::before {
                    content: '—';
                }
            }
        }
            h2 {
                font-weight: 500;
                text-align: center;
                font-size: var(--header-clamp);
                margin-bottom: 40px;
                color: var(--headers-primary);
            }
            p {
                margin: 20px 0;
                color: var(--headers-primary);
                font-size: 16px;
            }
            form {
                position: relative;
                display: grid;
                grid-template-columns: repeat(3, 1fr);
                gap: 24px;
                @media(max-width: 992px) {
                    grid-template-columns: repeat(2, 1fr);
                }
                @media(max-width: 600px) {
                    grid-template-columns: repeat(1, 1fr);
                    gap: 20px;
                }

                label {
                    display: flex;
                    flex-direction: column;
                    gap: 10px;
                    color: var(--headers-primary);
                    font-size: 16px;
                }

                select, input {
                    padding: 16px 20px;
                    border: 1px solid #d3dad7;
                    font-weight: 400;
                    font-size: 16px;
                    text-transform: capitalize;
                    min-height: 52px;
                    &::placeholder {
                        font-weight: 400;
                        font-size: 16px;
                        text-transform: capitalize;
                    }
                }

                button {
                    
                    background: var(--btn-primary);
                    font-weight: 700;
                    font-size: 18px;
                    color: var(--primary);
                    max-height: 52px;
                    height: 100%;
                    transition: .3s ease background;
                    align-self: end;
                    // @media(max-width: 992px) {
                    //     align-self: unset;
                    //     margin-top: 15px;
                    // }

                    @media(max-width: 600px) {
                        padding: 15px;
                        max-height: unset;
                    }

                    &:hover {
                        background: #0b1099;
                    }
                }
            }
            .personalData {
                font-size: 12px;
                text-align: center;
            }
            
    }
</style>


<script>
    const ipotekaForm: any = document.querySelector(".ipoteka__form");
    const ipotekasd = ipotekaForm.dataset.sd
    const ipotekaFormSelect = document.querySelector("#ipotekaFormSelect")
    const ipotekaFormPayment = document.querySelector("#ipotekaFormPayment")
    const ipotekaFormPeriod = document.querySelector("#ipotekaFormPeriod")
	const ipotekaPhone = document.querySelector('#ipotekaFormPhone')
	const ipotekaName = document.querySelector('#ipotekaFormName')
	async function sendData() {
	// Associate the FormData object with the form element
	const formData = new FormData(ipotekaForm);

	try {
		const response = await fetch(`https://monolid.yucrm.ru/api/orders/post?&phone=9999999999&name=name&object_name=${ipotekasd}&message=Расчитать ипотеку: Количество комнат - ${ipotekaFormSelect.value}, Первоначальный взнос - ${ipotekaFormPayment.value}, Срок/лет - ${ipotekaFormPeriod.value}&oauth_token=afd0bcd4ee3a219f27812dd4d20a550c`, {
		method: "POST",
		// Set the FormData instance as the request body
		body: formData,
		});
		console.log(await response.json());
	} catch (e) {
		console.error(e);
	}
	}
    const ipotekaMessage = document.querySelector('.ipotekaMessage')
	// Take over form submission
	ipotekaForm.addEventListener("submit", (event) => {
	event.preventDefault();
	sendData();
    ipotekaMessage.classList.add('active')
	setTimeout(() => {
		ipotekaMessage.classList.remove('active')
	}, 5000);
    ipotekaFormSelect.value = '1 комната'
    ipotekaFormPayment.value = ''
    ipotekaFormPeriod.value = ''
	ipotekaPhone.value = ''
	ipotekaName.value = ''
	});
</script>